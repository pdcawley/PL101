start =
   expression:expression _ { return expression }

expression = atom / quotedexpression / seq

quotedexpression =
  _ "'" expression:expression { return [ "quote", expression ] }

seq = _ "(" _ expression:expression* _ ")" { return expression }

validchar = [0-9a-zA-Z_?!+\-=@#$%^&*/.]

atom = _ chars:validchar+ { return chars.join(""); }

_ = (NL / space / comment)*

space = [ \t\v\f]

NL = "\n" / "\r\n" / "\r"

comment = ";;" (!NL .)* { return column === 1 ? [] : null }
