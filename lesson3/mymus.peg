start = _ passage:passage { return passage }

phrase = repetition / harmony / simplePhrase

harmony = "(" _ exprs:harmonyClauses _ ")" _ { return $$.par(exprs) }

harmonyClauses =
    head:passage _ tail:(("|" _ each:passage) { return each })+ { return [head].concat(tail) }

repetition =
    repcount:INT _ '*' _ event:(repeatablePhrase / atom) { return $$.rep(repcount, event) }
  / repcount:INT phrase:repeatablePhrase { return $$.rep(repcount, phrase) }

repeatablePhrase = harmony / simplePhrase

simplePhrase = "(" _ passage:passage ")" _ { return passage }

passage = events:(phrase / atom)+ { return $$.seq(events) }

atom = note / rest

note = pitch:pitch duration:duration _  { return $$.note(pitch, duration) }

rest = "-" duration:duration _ { return $$.rest(duration) }

duration =  "[" time:INT "]" { return time }

pitch = note:NOTE_LETTER octave:DIGIT { return [note, octave].join("") }

NOTE_LETTER = char:[a-gA-G] { return char.toLowerCase() }

DIGIT = [0-9]

INT = digits:DIGIT+ { return parseInt(digits.join(''), 10) }

SPACE = [ \t]

NL = "\r\n" / "\n" / "\r"

_ = (SPACE / NL)*
